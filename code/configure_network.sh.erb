#!/bin/bash
# Network configuration script
# This script configures network interfaces based on host configuration
# Generated by Puppet <%= @puppetversion %>

# Ensure required packages are installed
if ! rpm -q NetworkManager-team > /dev/null; then
  echo "Installing NetworkManager-team..."
  dnf install -y NetworkManager-team
fi

if ! rpm -q teamd > /dev/null; then
  echo "Installing teamd..."
  dnf install -y teamd
fi

# Load 8021q module for VLAN support
if ! lsmod | grep -q 8021q; then
  echo "Loading 8021q module..."
  modprobe 8021q
  echo "8021q" > /etc/modules-load.d/8021q.conf
fi

# Get hostname and configuration
HOSTNAME="<%= @system_hostname %>"
echo "Configuring network for $HOSTNAME..."

<% if @current_host != [] -%>
<% @host = @current_host[0] -%>
<% @network = @host['network'] -%>

# Configure primary interface if needed
PRIMARY_DEVICE="<%= @network['primary_interface']['device'] %>"
PRIMARY_MAC="<%= @network['primary_interface']['mac_address'] %>"
echo "Primary interface: $PRIMARY_DEVICE ($PRIMARY_MAC)"

# Only update primary interface if configuration is different
if [ ! -f "/etc/sysconfig/network-scripts/ifcfg-$PRIMARY_DEVICE" ] || ! grep -q "<%= @network['primary_interface']['bootproto'] %>" "/etc/sysconfig/network-scripts/ifcfg-$PRIMARY_DEVICE"; then
  echo "Configuring primary interface $PRIMARY_DEVICE..."
  cat > "/etc/sysconfig/network-scripts/ifcfg-$PRIMARY_DEVICE" << 'EOF'
DEVICE=<%= @network['primary_interface']['device'] %>
TYPE=<%= @network['primary_interface']['type'] %>
NAME=<%= @network['primary_interface']['device'] %>
ONBOOT=<%= @network['primary_interface']['onboot'] %>
BOOTPROTO=<%= @network['primary_interface']['bootproto'] %>
<% if @network['primary_interface']['bootproto'] == 'static' -%>
IPADDR=<%= @network['primary_interface']['ipaddr'] %>
NETMASK=<%= @network['primary_interface']['netmask'] %>
<% end -%>
HWADDR=<%= @network['primary_interface']['mac_address'] %>
EOF
fi

# Configure additional interfaces
<% if @network['second_interface'] -%>
echo "Configuring second interface <%= @network['second_interface']['device'] %>..."
cat > "/etc/sysconfig/network-scripts/ifcfg-<%= @network['second_interface']['device'] %>" << 'EOF'
DEVICE=<%= @network['second_interface']['device'] %>
TYPE=<%= @network['second_interface']['type'] %>
NAME=<%= @network['second_interface']['device'] %>
ONBOOT=<%= @network['second_interface']['onboot'] %>
BOOTPROTO=<%= @network['second_interface']['bootproto'] %>
<% if @network['second_interface']['bootproto'] == 'static' -%>
IPADDR=<%= @network['second_interface']['ipaddr'] %>
NETMASK=<%= @network['second_interface']['netmask'] %>
<% end -%>
HWADDR=<%= @network['second_interface']['mac_address'] %>
EOF
<% end -%>

<% if @network['third_interface'] -%>
echo "Configuring third interface <%= @network['third_interface']['device'] %>..."
cat > "/etc/sysconfig/network-scripts/ifcfg-<%= @network['third_interface']['device'] %>" << 'EOF'
DEVICE=<%= @network['third_interface']['device'] %>
TYPE=<%= @network['third_interface']['type'] %>
NAME=<%= @network['third_interface']['device'] %>
ONBOOT=<%= @network['third_interface']['onboot'] %>
BOOTPROTO=<%= @network['third_interface']['bootproto'] %>
<% if @network['third_interface']['bootproto'] == 'static' -%>
IPADDR=<%= @network['third_interface']['ipaddr'] %>
NETMASK=<%= @network['third_interface']['netmask'] %>
<% end -%>
HWADDR=<%= @network['third_interface']['mac_address'] %>
EOF
<% end -%>

<% if @network['fourth_interface'] -%>
echo "Configuring fourth interface <%= @network['fourth_interface']['device'] %>..."
cat > "/etc/sysconfig/network-scripts/ifcfg-<%= @network['fourth_interface']['device'] %>" << 'EOF'
DEVICE=<%= @network['fourth_interface']['device'] %>
TYPE=<%= @network['fourth_interface']['type'] %>
NAME=<%= @network['fourth_interface']['device'] %>
ONBOOT=<%= @network['fourth_interface']['onboot'] %>
BOOTPROTO=<%= @network['fourth_interface']['bootproto'] %>
<% if @network['fourth_interface']['bootproto'] == 'static' -%>
IPADDR=<%= @network['fourth_interface']['ipaddr'] %>
NETMASK=<%= @network['fourth_interface']['netmask'] %>
<% end -%>
HWADDR=<%= @network['fourth_interface']['mac_address'] %>
EOF
<% end -%>

# Configure bond interfaces if present
<% if @network['bond_interfaces'] -%>
<% @network['bond_interfaces'].each do |bond_name, bond_config| -%>
echo "Configuring bond interface <%= bond_name %>..."
cat > "/etc/sysconfig/network-scripts/ifcfg-<%= bond_config['device'] %>" << 'EOF'
DEVICE=<%= bond_config['device'] %>
BOOTPROTO=<%= bond_config['bootproto'] %>
ONBOOT=<%= bond_config['onboot'] %>
TYPE=<%= bond_config['type'] %>
BONDING_OPTS="<%= bond_config['bonding_opts'] %>"
EOF

# Configure slave interfaces
<% bond_config['slaves'].each do |slave| -%>
echo "Configuring slave interface <%= slave['name'] %>..."
cat > "/etc/sysconfig/network-scripts/ifcfg-<%= slave['name'] %>" << 'EOF'
DEVICE=<%= slave['name'] %>
BOOTPROTO=none
ONBOOT=yes
MASTER=<%= bond_config['device'] %>
SLAVE=yes
HWADDR=<%= slave['mac_address'] %>
EOF
<% end -%>

# Configure VLANs if present
<% if bond_config['vlans'] -%>
<% bond_config['vlans'].each do |vlan| -%>
echo "Configuring VLAN <%= vlan['id'] %> on <%= bond_config['device'] %>..."
cat > "/etc/sysconfig/network-scripts/ifcfg-<%= bond_config['device'] %>.<%= vlan['id'] %>" << 'EOF'
DEVICE=<%= bond_config['device'] %>.<%= vlan['id'] %>
BOOTPROTO=static
ONBOOT=yes
VLAN=yes
IPADDR=<%= vlan['ipaddr'] %>
NETMASK=<%= vlan['netmask'] %>
EOF
<% end -%>
<% end -%>
<% end -%>
<% end -%>

# Restart NetworkManager to apply changes
echo "Restarting NetworkManager..."
systemctl restart NetworkManager

# Create marker file to indicate completion
echo "Network configuration completed on $(date)" > /root/network_config_complete
<% else -%>
echo "No host configuration found for $HOSTNAME"
<% end -%> 